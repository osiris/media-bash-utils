#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2014 Osiris Alejandro Gomez <osiux@osiux.com.ar>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

DIR='/mnt/data/fotos'
LEVEL=1
PATTERN='[0-9]{4}-[0-9]{2}-[0-9]{2}-[0-9]{4}-[0-9a-z]{6,7}.jpg'

while getopts "d:l:" OPTION
do
  case $OPTION in
    d)
      DIR="$OPTARG"
      ;;
    l)
      LEVEL=$OPTARG
      ;;
  esac
done

[ ! -d "$DIR" ] && exit 1

mkdir -p $DIR'/'duplicate

# verify LEVEL is a number?
if [[ ! $LEVEL =~ ^[0-9]+$ ]]
then
  echo ERROR invalid level: $LEVEL
  exit 1
fi

cd "$PWD"
FIND="find -maxdepth $LEVEL -type f -iname "

$FIND '*.jpg' | cut -c 3- | egrep $PATTERN | sort -u | while read F
do
    FILE=$(basename "$F")
    YEAR=$(echo $FILE | cut -c 1-4)
    MONTH=$(echo $FILE | cut -c 6-7)
    DAY=$(echo $FILE | cut -c -10)
    MD5=$(md5sum "$F" | awk '{print $1}')
    WIDTH=`identify -format '%w' $F`

    if [ -z "$WIDTH" ]
    then
        DEST=$YEAR'/'$YEAR'-'$MONTH'/'$DAY'/'$FILE
        mkdir -p $DIR'/'$YEAR'/'$YEAR'-'$MONTH'/'$DAY
    else
        DEST=$YEAR'/'$YEAR'-'$MONTH'/'$DAY'/'$WIDTH'/'$FILE
        mkdir -p $DIR'/'$YEAR'/'$YEAR'-'$MONTH'/'$DAY'/'$WIDTH
    fi

    MD5_DEST=$(md5sum $DIR'/'$DEST 2>/dev/null | awk '{print $1}')

    if [ "$MD5_DEST" = "$MD5" ]
    then
        echo "duplicate file: " $DIR'/'$DEST
        DUP=$DIR'/'duplicate'/'$FILE
        if [ -e "$DUP" ]
        then
            echo "delete re-duplicate file: $F"
            rm "$F"
        else
            if [ "$F" != "$DIR/$DEST" ]
            then
              echo "move duplicate file: $F -> $DUP"
              mv -i "$F" "$DUP"
            else
              echo "origin and destination are the same file: $F"
            fi
        fi
    else
        if [ -e $DIR'/'$DEST ]
        then
            echo "duplicate filename: " $DIR'/'$DEST
        else
            mv -i "$F" $DIR'/'$DEST
        fi
    fi
done

