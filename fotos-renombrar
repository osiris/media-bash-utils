#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2014 Osiris Alejandro Gomez <osiux@osiux.com.ar>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

DIR=$PWD
LEVEL=1
EXCLUDE='[0-9]{4}-[0-9]{2}-[0-9]{2}-[0-9]{4}-[0-9a-z]{6}.jpg'

while getopts "d:l:" OPTION
do
  case $OPTION in
    d)
      DIR=$OPTARG
      ;;
    l)
      LEVEL=$OPTARG
      ;;
  esac
done

if [ ! -d $DIR ]
then
  echo ERROR $DIR
fi

# verify LEVEL is a number?
if [[ ! $LEVEL =~ ^[0-9]+$ ]]
then
  echo ERROR invalid level: $LEVEL
  exit 1
fi

cd $PWD

FIND="find -maxdepth $LEVEL -type f -iname "

$FIND '*.jpg' | cut -c 3- | egrep -v $EXCLUDE | while read i
do
  JPEG=$(file "$i" | grep -o JPEG)

  if [ "$JPEG" = "JPEG" ]
  then

    HASH=$(md5sum "$i" | cut -c -6)

    if [ -e $HASH.jpg ]
    then
      echo "ya existe el archivo" $HASH.jpg
    else
      mv -vi "$i" $HASH.jpg
    fi

    identify $HASH.jpg 2>/dev/null
    OK=$(echo $?)

    if [ $OK -gt 0 ]
    then
      echo "invalid JPEG" $HASH.jpg
      mv -vi $HASH.jpg $HASH.dat
    fi

    FILE_DATE=$(jhead $HASH.jpg | grep "File date" | cut -d: -f2)

    if [[ ! $FILE_DATE =~ [0-9]{2} ]]
    then
      NOW=$(date +%Y:%m:%d)
      jhead -ds $NOW
    fi

    DATE=$(jhead $HASH.jpg | grep "Date/Time" | egrep -o "0000:00:00")

    if [ "$DATE" = "0000:00:00" ]
    then
      jhead -exonly -ft "$HASH.jpg"
    fi


    jhead -exonly -n%Y-%m-%d-%H%M-%f "$HASH.jpg"

  else
    echo "invalid JPEG: " "$i"
    if [ ! -e "$i.dat" ]
    then
      mv -v "$i" "$i.dat"
    fi
  fi
done


